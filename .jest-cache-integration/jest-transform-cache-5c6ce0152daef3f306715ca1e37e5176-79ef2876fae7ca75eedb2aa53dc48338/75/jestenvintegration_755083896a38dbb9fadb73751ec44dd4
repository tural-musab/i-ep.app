303f5ba73604ec2f2cfbe0fef983955f
/* eslint-disable @typescript-eslint/no-require-imports */
/**
 * ƒ∞-EP.APP - Integration Test Environment Variables Loader
 * Bu dosya integration testleri √∂ncesinde gerekli env deƒüi≈ükenlerini y√ºkler
 */

const {
  config
} = require('dotenv');
const path = require('path');

// FORCE load .env.test file directly
const envPath = path.resolve(process.cwd(), '.env.test');
console.log('üîß Loading .env.test from:', envPath);
const result = config({
  path: envPath,
  override: true
});

// MANUAL environment variable setting for critical ones
if (!process.env.NEXT_PUBLIC_SUPABASE_URL) {
  process.env.NEXT_PUBLIC_SUPABASE_URL = 'http://localhost:54321';
}
if (!process.env.SUPABASE_SERVICE_ROLE_KEY) {
  process.env.SUPABASE_SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';
}
if (!process.env.REDIS_URL) {
  process.env.REDIS_URL = 'redis://localhost:6379';
}
if (!process.env.TEST_TENANT_ID) {
  process.env.TEST_TENANT_ID = 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa';
}
if (result.error) {
  console.warn('‚ö†Ô∏è  Integration Test Environment Warning:', result.error.message);
  console.warn('üìù Make sure .env.test file exists with required variables');
}

// Validate critical environment variables for integration tests
const requiredVars = ['DATABASE_URL', 'NEXT_PUBLIC_SUPABASE_URL', 'NEXT_PUBLIC_SUPABASE_ANON_KEY', 'SUPABASE_SERVICE_ROLE_KEY', 'REDIS_URL', 'NEXTAUTH_SECRET', 'TEST_TENANT_ID'];
const missingVars = requiredVars.filter(varName => !process.env[varName]);
if (missingVars.length > 0) {
  console.error('‚ùå Integration Test Environment Error:');
  console.error('Missing required environment variables:', missingVars.join(', '));
  console.error('');
  console.error('üîß Required variables in .env.test:');
  missingVars.forEach(varName => {
    console.error(`   ${varName}=your-value-here`);
  });
  console.error('');
  console.error('üìñ See .env.example for reference values');
  process.exit(1);
}

// Set NODE_ENV to test if not already set
if (!process.env.NODE_ENV) {
  process.env.NODE_ENV = 'test';
}

// Ensure test environment isolation
process.env.NODE_ENV = 'test';

// Integration test specific environment setup
process.env.TEST_ENVIRONMENT = 'integration';
process.env.JEST_WORKER_ID = process.env.JEST_WORKER_ID || '1';
console.log('‚úÖ Integration test environment loaded successfully');
console.log(`üìä Database: ${process.env.DATABASE_URL?.includes('localhost') ? 'Local Supabase' : 'Remote'}`);
console.log(`üîÑ Redis: ${process.env.REDIS_URL?.includes('localhost') ? 'Local Redis' : 'Remote'}`);
console.log(`üè¢ Test Tenant: ${process.env.TEST_TENANT_ID}`);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwicGF0aCIsImVudlBhdGgiLCJyZXNvbHZlIiwicHJvY2VzcyIsImN3ZCIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHQiLCJvdmVycmlkZSIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJSRURJU19VUkwiLCJURVNUX1RFTkFOVF9JRCIsImVycm9yIiwid2FybiIsIm1lc3NhZ2UiLCJyZXF1aXJlZFZhcnMiLCJtaXNzaW5nVmFycyIsImZpbHRlciIsInZhck5hbWUiLCJsZW5ndGgiLCJqb2luIiwiZm9yRWFjaCIsImV4aXQiLCJOT0RFX0VOViIsIlRFU1RfRU5WSVJPTk1FTlQiLCJKRVNUX1dPUktFUl9JRCIsIkRBVEFCQVNFX1VSTCIsImluY2x1ZGVzIl0sInNvdXJjZXMiOlsiamVzdC5lbnYuaW50ZWdyYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXJlcXVpcmUtaW1wb3J0cyAqL1xuLyoqXG4gKiDEsC1FUC5BUFAgLSBJbnRlZ3JhdGlvbiBUZXN0IEVudmlyb25tZW50IFZhcmlhYmxlcyBMb2FkZXJcbiAqIEJ1IGRvc3lhIGludGVncmF0aW9uIHRlc3RsZXJpIMO2bmNlc2luZGUgZ2VyZWtsaSBlbnYgZGXEn2nFn2tlbmxlcmluaSB5w7xrbGVyXG4gKi9cblxuY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJ2RvdGVudicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuLy8gRk9SQ0UgbG9hZCAuZW52LnRlc3QgZmlsZSBkaXJlY3RseVxuY29uc3QgZW52UGF0aCA9IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCAnLmVudi50ZXN0Jyk7XG5jb25zb2xlLmxvZygn8J+UpyBMb2FkaW5nIC5lbnYudGVzdCBmcm9tOicsIGVudlBhdGgpO1xuXG5jb25zdCByZXN1bHQgPSBjb25maWcoeyBwYXRoOiBlbnZQYXRoLCBvdmVycmlkZTogdHJ1ZSB9KTtcblxuLy8gTUFOVUFMIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmcgZm9yIGNyaXRpY2FsIG9uZXNcbmlmICghcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMKSB7XG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCA9ICdodHRwOi8vbG9jYWxob3N0OjU0MzIxJztcbn1cbmlmICghcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSkge1xuICBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZID0gJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTMWtaVzF2SWl3aWNtOXNaU0k2SW5ObGNuWnBZMlZmY205c1pTSXNJbVY0Y0NJNk1UazRNemd4TWprNU5uMC5FR0lNOTZSQVp4MzVsSnpkSnN5SC1xUXd2OEhkcDdmc24zVzBZcE44MUlVJztcbn1cbmlmICghcHJvY2Vzcy5lbnYuUkVESVNfVVJMKSB7XG4gIHByb2Nlc3MuZW52LlJFRElTX1VSTCA9ICdyZWRpczovL2xvY2FsaG9zdDo2Mzc5Jztcbn1cbmlmICghcHJvY2Vzcy5lbnYuVEVTVF9URU5BTlRfSUQpIHtcbiAgcHJvY2Vzcy5lbnYuVEVTVF9URU5BTlRfSUQgPSAnYWFhYWFhYWEtYWFhYS1hYWFhLWFhYWEtYWFhYWFhYWFhYWFhJztcbn1cblxuaWYgKHJlc3VsdC5lcnJvcikge1xuICBjb25zb2xlLndhcm4oJ+KaoO+4jyAgSW50ZWdyYXRpb24gVGVzdCBFbnZpcm9ubWVudCBXYXJuaW5nOicsIHJlc3VsdC5lcnJvci5tZXNzYWdlKTtcbiAgY29uc29sZS53YXJuKCfwn5OdIE1ha2Ugc3VyZSAuZW52LnRlc3QgZmlsZSBleGlzdHMgd2l0aCByZXF1aXJlZCB2YXJpYWJsZXMnKTtcbn1cblxuLy8gVmFsaWRhdGUgY3JpdGljYWwgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZvciBpbnRlZ3JhdGlvbiB0ZXN0c1xuY29uc3QgcmVxdWlyZWRWYXJzID0gW1xuICAnREFUQUJBU0VfVVJMJyxcbiAgJ05FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcsXG4gICdORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWScsXG4gICdTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZJyxcbiAgJ1JFRElTX1VSTCcsXG4gICdORVhUQVVUSF9TRUNSRVQnLFxuICAnVEVTVF9URU5BTlRfSUQnXG5dO1xuXG5jb25zdCBtaXNzaW5nVmFycyA9IHJlcXVpcmVkVmFycy5maWx0ZXIodmFyTmFtZSA9PiAhcHJvY2Vzcy5lbnZbdmFyTmFtZV0pO1xuXG5pZiAobWlzc2luZ1ZhcnMubGVuZ3RoID4gMCkge1xuICBjb25zb2xlLmVycm9yKCfinYwgSW50ZWdyYXRpb24gVGVzdCBFbnZpcm9ubWVudCBFcnJvcjonKTtcbiAgY29uc29sZS5lcnJvcignTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXM6JywgbWlzc2luZ1ZhcnMuam9pbignLCAnKSk7XG4gIGNvbnNvbGUuZXJyb3IoJycpO1xuICBjb25zb2xlLmVycm9yKCfwn5SnIFJlcXVpcmVkIHZhcmlhYmxlcyBpbiAuZW52LnRlc3Q6Jyk7XG4gIG1pc3NpbmdWYXJzLmZvckVhY2godmFyTmFtZSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihgICAgJHt2YXJOYW1lfT15b3VyLXZhbHVlLWhlcmVgKTtcbiAgfSk7XG4gIGNvbnNvbGUuZXJyb3IoJycpO1xuICBjb25zb2xlLmVycm9yKCfwn5OWIFNlZSAuZW52LmV4YW1wbGUgZm9yIHJlZmVyZW5jZSB2YWx1ZXMnKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufVxuXG4vLyBTZXQgTk9ERV9FTlYgdG8gdGVzdCBpZiBub3QgYWxyZWFkeSBzZXRcbmlmICghcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7XG59XG5cbi8vIEVuc3VyZSB0ZXN0IGVudmlyb25tZW50IGlzb2xhdGlvblxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgPSAndGVzdCc7XG5cbi8vIEludGVncmF0aW9uIHRlc3Qgc3BlY2lmaWMgZW52aXJvbm1lbnQgc2V0dXBcbnByb2Nlc3MuZW52LlRFU1RfRU5WSVJPTk1FTlQgPSAnaW50ZWdyYXRpb24nO1xucHJvY2Vzcy5lbnYuSkVTVF9XT1JLRVJfSUQgPSBwcm9jZXNzLmVudi5KRVNUX1dPUktFUl9JRCB8fCAnMSc7XG5cbmNvbnNvbGUubG9nKCfinIUgSW50ZWdyYXRpb24gdGVzdCBlbnZpcm9ubWVudCBsb2FkZWQgc3VjY2Vzc2Z1bGx5Jyk7XG5jb25zb2xlLmxvZyhg8J+TiiBEYXRhYmFzZTogJHtwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkw/LmluY2x1ZGVzKCdsb2NhbGhvc3QnKSA/ICdMb2NhbCBTdXBhYmFzZScgOiAnUmVtb3RlJ31gKTtcbmNvbnNvbGUubG9nKGDwn5SEIFJlZGlzOiAke3Byb2Nlc3MuZW52LlJFRElTX1VSTD8uaW5jbHVkZXMoJ2xvY2FsaG9zdCcpID8gJ0xvY2FsIFJlZGlzJyA6ICdSZW1vdGUnfWApO1xuY29uc29sZS5sb2coYPCfj6IgVGVzdCBUZW5hbnQ6ICR7cHJvY2Vzcy5lbnYuVEVTVF9URU5BTlRfSUR9YCk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDcEMsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDOztBQUU1QjtBQUNBLE1BQU1FLE9BQU8sR0FBR0QsSUFBSSxDQUFDRSxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUM7QUFDeERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRCQUE0QixFQUFFTCxPQUFPLENBQUM7QUFFbEQsTUFBTU0sTUFBTSxHQUFHVCxNQUFNLENBQUM7RUFBRUUsSUFBSSxFQUFFQyxPQUFPO0VBQUVPLFFBQVEsRUFBRTtBQUFLLENBQUMsQ0FBQzs7QUFFeEQ7QUFDQSxJQUFJLENBQUNMLE9BQU8sQ0FBQ00sR0FBRyxDQUFDQyx3QkFBd0IsRUFBRTtFQUN6Q1AsT0FBTyxDQUFDTSxHQUFHLENBQUNDLHdCQUF3QixHQUFHLHdCQUF3QjtBQUNqRTtBQUNBLElBQUksQ0FBQ1AsT0FBTyxDQUFDTSxHQUFHLENBQUNFLHlCQUF5QixFQUFFO0VBQzFDUixPQUFPLENBQUNNLEdBQUcsQ0FBQ0UseUJBQXlCLEdBQUcsc0tBQXNLO0FBQ2hOO0FBQ0EsSUFBSSxDQUFDUixPQUFPLENBQUNNLEdBQUcsQ0FBQ0csU0FBUyxFQUFFO0VBQzFCVCxPQUFPLENBQUNNLEdBQUcsQ0FBQ0csU0FBUyxHQUFHLHdCQUF3QjtBQUNsRDtBQUNBLElBQUksQ0FBQ1QsT0FBTyxDQUFDTSxHQUFHLENBQUNJLGNBQWMsRUFBRTtFQUMvQlYsT0FBTyxDQUFDTSxHQUFHLENBQUNJLGNBQWMsR0FBRyxzQ0FBc0M7QUFDckU7QUFFQSxJQUFJTixNQUFNLENBQUNPLEtBQUssRUFBRTtFQUNoQlQsT0FBTyxDQUFDVSxJQUFJLENBQUMsMkNBQTJDLEVBQUVSLE1BQU0sQ0FBQ08sS0FBSyxDQUFDRSxPQUFPLENBQUM7RUFDL0VYLE9BQU8sQ0FBQ1UsSUFBSSxDQUFDLDREQUE0RCxDQUFDO0FBQzVFOztBQUVBO0FBQ0EsTUFBTUUsWUFBWSxHQUFHLENBQ25CLGNBQWMsRUFDZCwwQkFBMEIsRUFDMUIsK0JBQStCLEVBQy9CLDJCQUEyQixFQUMzQixXQUFXLEVBQ1gsaUJBQWlCLEVBQ2pCLGdCQUFnQixDQUNqQjtBQUVELE1BQU1DLFdBQVcsR0FBR0QsWUFBWSxDQUFDRSxNQUFNLENBQUNDLE9BQU8sSUFBSSxDQUFDakIsT0FBTyxDQUFDTSxHQUFHLENBQUNXLE9BQU8sQ0FBQyxDQUFDO0FBRXpFLElBQUlGLFdBQVcsQ0FBQ0csTUFBTSxHQUFHLENBQUMsRUFBRTtFQUMxQmhCLE9BQU8sQ0FBQ1MsS0FBSyxDQUFDLHVDQUF1QyxDQUFDO0VBQ3REVCxPQUFPLENBQUNTLEtBQUssQ0FBQyx5Q0FBeUMsRUFBRUksV0FBVyxDQUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7RUFDaEZqQixPQUFPLENBQUNTLEtBQUssQ0FBQyxFQUFFLENBQUM7RUFDakJULE9BQU8sQ0FBQ1MsS0FBSyxDQUFDLHFDQUFxQyxDQUFDO0VBQ3BESSxXQUFXLENBQUNLLE9BQU8sQ0FBQ0gsT0FBTyxJQUFJO0lBQzdCZixPQUFPLENBQUNTLEtBQUssQ0FBQyxNQUFNTSxPQUFPLGtCQUFrQixDQUFDO0VBQ2hELENBQUMsQ0FBQztFQUNGZixPQUFPLENBQUNTLEtBQUssQ0FBQyxFQUFFLENBQUM7RUFDakJULE9BQU8sQ0FBQ1MsS0FBSyxDQUFDLDBDQUEwQyxDQUFDO0VBQ3pEWCxPQUFPLENBQUNxQixJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2pCOztBQUVBO0FBQ0EsSUFBSSxDQUFDckIsT0FBTyxDQUFDTSxHQUFHLENBQUNnQixRQUFRLEVBQUU7RUFDekJ0QixPQUFPLENBQUNNLEdBQUcsQ0FBQ2dCLFFBQVEsR0FBRyxNQUFNO0FBQy9COztBQUVBO0FBQ0F0QixPQUFPLENBQUNNLEdBQUcsQ0FBQ2dCLFFBQVEsR0FBRyxNQUFNOztBQUU3QjtBQUNBdEIsT0FBTyxDQUFDTSxHQUFHLENBQUNpQixnQkFBZ0IsR0FBRyxhQUFhO0FBQzVDdkIsT0FBTyxDQUFDTSxHQUFHLENBQUNrQixjQUFjLEdBQUd4QixPQUFPLENBQUNNLEdBQUcsQ0FBQ2tCLGNBQWMsSUFBSSxHQUFHO0FBRTlEdEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsb0RBQW9ELENBQUM7QUFDakVELE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdCQUFnQkgsT0FBTyxDQUFDTSxHQUFHLENBQUNtQixZQUFZLEVBQUVDLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBRyxnQkFBZ0IsR0FBRyxRQUFRLEVBQUUsQ0FBQztBQUM1R3hCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGFBQWFILE9BQU8sQ0FBQ00sR0FBRyxDQUFDRyxTQUFTLEVBQUVpQixRQUFRLENBQUMsV0FBVyxDQUFDLEdBQUcsYUFBYSxHQUFHLFFBQVEsRUFBRSxDQUFDO0FBQ25HeEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CSCxPQUFPLENBQUNNLEdBQUcsQ0FBQ0ksY0FBYyxFQUFFLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=