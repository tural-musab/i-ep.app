{"version":3,"sources":["/Users/turanmusabosman/Projects/i-ep.app/src/lib/supabase/server.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// Ortam değişkenlerini kontrol et ve varsayılan değerleri kullan\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'http://127.0.0.1:54321';\nconst supabaseServiceRoleKey =\n  process.env.SUPABASE_SERVICE_ROLE_KEY ||\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU';\n\n// Supabase client for server-side operations with service role\nexport const supabaseServer = createClient(supabaseUrl, supabaseServiceRoleKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false,\n    detectSessionInUrl: false,\n  },\n  global: {\n    headers: {\n      'x-my-custom-header': 'service-role',\n    },\n  },\n});\n\n// Create a Supabase client for server components with anon key\nexport function createServerSupabaseClient() {\n  try {\n    const anonKey =\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ||\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0';\n\n    // Validate URL format\n    if (!supabaseUrl || !isValidUrl(supabaseUrl)) {\n      throw new Error(`Invalid Supabase URL: ${supabaseUrl}`);\n    }\n\n    return createClient(supabaseUrl, anonKey, {\n      auth: {\n        autoRefreshToken: false,\n        persistSession: false,\n        detectSessionInUrl: false,\n      },\n    });\n  } catch (error) {\n    console.error('Failed to create Supabase server client:', error);\n    throw error;\n  }\n}\n\n// Helper function to validate URL format\nfunction isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n// Create a tenant-specific Supabase client for multi-tenant operations\nexport function getTenantSupabaseClient(tenantId: string) {\n  const anonKey =\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ||\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0';\n\n  return createClient(supabaseUrl, anonKey, {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      headers: {\n        'x-tenant-id': tenantId,\n      },\n    },\n  });\n}\n"],"names":["createServerSupabaseClient","getTenantSupabaseClient","supabaseServer","supabaseUrl","process","env","NEXT_PUBLIC_SUPABASE_URL","supabaseServiceRoleKey","SUPABASE_SERVICE_ROLE_KEY","createClient","auth","autoRefreshToken","persistSession","detectSessionInUrl","global","headers","anonKey","NEXT_PUBLIC_SUPABASE_ANON_KEY","isValidUrl","Error","error","console","url","URL","tenantId"],"mappings":";;;;;;;;;;;IAuBgBA,0BAA0B;eAA1BA;;IAmCAC,uBAAuB;eAAvBA;;IAjDHC,cAAc;eAAdA;;;4BATgB;AAE7B,iEAAiE;AACjE,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB,IAAI;AAC5D,MAAMC,yBACJH,QAAQC,GAAG,CAACG,yBAAyB,IACrC;AAGK,MAAMN,iBAAiBO,IAAAA,wBAAY,EAACN,aAAaI,wBAAwB;IAC9EG,MAAM;QACJC,kBAAkB;QAClBC,gBAAgB;QAChBC,oBAAoB;IACtB;IACAC,QAAQ;QACNC,SAAS;YACP,sBAAsB;QACxB;IACF;AACF;AAGO,SAASf;IACd,IAAI;QACF,MAAMgB,UACJZ,QAAQC,GAAG,CAACY,6BAA6B,IACzC;QAEF,sBAAsB;QACtB,IAAI,CAACd,eAAe,CAACe,WAAWf,cAAc;YAC5C,MAAM,IAAIgB,MAAM,CAAC,sBAAsB,EAAEhB,aAAa;QACxD;QAEA,OAAOM,IAAAA,wBAAY,EAACN,aAAaa,SAAS;YACxCN,MAAM;gBACJC,kBAAkB;gBAClBC,gBAAgB;gBAChBC,oBAAoB;YACtB;QACF;IACF,EAAE,OAAOO,OAAO;QACdC,QAAQD,KAAK,CAAC,4CAA4CA;QAC1D,MAAMA;IACR;AACF;AAEA,yCAAyC;AACzC,SAASF,WAAWI,GAAW;IAC7B,IAAI;QACF,IAAIC,IAAID;QACR,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAGO,SAASrB,wBAAwBuB,QAAgB;IACtD,MAAMR,UACJZ,QAAQC,GAAG,CAACY,6BAA6B,IACzC;IAEF,OAAOR,IAAAA,wBAAY,EAACN,aAAaa,SAAS;QACxCN,MAAM;YACJC,kBAAkB;YAClBC,gBAAgB;YAChBC,oBAAoB;QACtB;QACAC,QAAQ;YACNC,SAAS;gBACP,eAAeS;YACjB;QACF;IACF;AACF"}