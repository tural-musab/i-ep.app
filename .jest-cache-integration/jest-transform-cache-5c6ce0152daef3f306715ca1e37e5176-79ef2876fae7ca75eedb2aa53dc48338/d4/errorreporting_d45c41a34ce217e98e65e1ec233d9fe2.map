{"version":3,"sources":["/Users/turanmusabosman/Projects/i-ep.app/src/utils/error-reporting.ts"],"sourcesContent":["import * as Sentry from '@sentry/nextjs';\n\n/**\n * Hata bilgisini yapılandırılmış şekilde Sentry'ye raporlar\n *\n * @param error - Raporlanacak hata\n * @param context - Hata ile ilgili ek bilgiler\n * @param tags - Filtreleme ve gruplandırma için etiketler\n * @param level - Hata seviyesi (fatal, error, warning, info, debug)\n */\nexport function reportError(\n  error: unknown,\n  context: Record<string, unknown> = {},\n  tags: Record<string, string> = {},\n  level: Sentry.SeverityLevel = 'error'\n): void {\n  // Tenant ID ekleme (kullanılabilirse)\n  if (typeof window !== 'undefined') {\n    const tenantId = localStorage.getItem('currentTenantId');\n    if (tenantId) {\n      tags.tenant_id = tenantId;\n    }\n  }\n\n  if (error instanceof Error) {\n    // Mevcut kullanıcı bilgisini ayarla (varsa)\n    if (context.userId) {\n      Sentry.setUser({ id: String(context.userId) });\n    }\n\n    // Etiketleri ayarla\n    Object.keys(tags).forEach((tagKey) => {\n      Sentry.setTag(tagKey, tags[tagKey]);\n    });\n\n    // Ek bağlam verilerini ekle\n    Sentry.setContext('additionalData', context);\n\n    // Hatayı raporla\n    Sentry.captureException(error, {\n      level,\n      tags,\n      extra: context,\n    });\n  } else {\n    // Error olmayan değerler için\n    Sentry.captureMessage(typeof error === 'string' ? error : 'Bilinmeyen hata', {\n      level,\n      tags,\n      extra: { ...context, originalError: error },\n    });\n  }\n}\n\n/**\n * API isteği sırasında oluşan hataları raporlamak için özel fonksiyon\n */\nexport function reportApiError(\n  error: unknown,\n  apiInfo: {\n    endpoint: string;\n    method: string;\n    statusCode?: number;\n    requestData?: unknown;\n  },\n  userId?: string\n): void {\n  reportError(\n    error,\n    {\n      userId,\n      api: apiInfo.endpoint,\n      method: apiInfo.method,\n      statusCode: apiInfo.statusCode,\n      requestData: apiInfo.requestData,\n    },\n    {\n      error_type: 'api_error',\n      endpoint: apiInfo.endpoint,\n    }\n  );\n}\n\n/**\n * Kullanıcı etkileşimi sırasında oluşan hataları raporlamak için özel fonksiyon\n */\nexport function reportUIError(\n  error: unknown,\n  uiInfo: {\n    component: string;\n    action: string;\n    additionalData?: unknown;\n  },\n  userId?: string\n): void {\n  reportError(\n    error,\n    {\n      userId,\n      component: uiInfo.component,\n      action: uiInfo.action,\n      additionalData: uiInfo.additionalData,\n    },\n    {\n      error_type: 'ui_error',\n      component: uiInfo.component,\n    }\n  );\n}\n\n/**\n * Performans izleme için işlem başlatma\n *\n * Not: Bu fonksiyon Sentry.startTransaction API'si güncellendiği için şu anda aktif olarak kullanılmıyor.\n * Gerekirse Sentry'nin güncel API'sine göre uyarlanabilir.\n */\nexport function startPerformanceTracking(\n  name: string,\n  op: string,\n  data?: Record<string, unknown>\n): { name: string; op: string; data?: Record<string, unknown>; finish: () => void } | undefined {\n  try {\n    // Sentry API değişikliği nedeniyle fonksiyon şu anda bir mock döndürüyor\n    // Gerçek implementasyon için güncel Sentry dökümanlarına bakınız\n    console.log(`Performance tracking başlatıldı: ${name} (${op})`);\n\n    // Basit bir mock transaction nesnesi\n    return {\n      name,\n      op,\n      data,\n      finish: () => console.log(`Performance tracking tamamlandı: ${name}`),\n    };\n  } catch (e) {\n    console.error('Performans izleme başlatılamadı:', e);\n    return undefined;\n  }\n}\n\n/**\n * Redis ile ilgili hataları raporlamak için özel fonksiyon\n */\nexport function reportRedisError(\n  error: unknown,\n  operation: string,\n  key?: string,\n  tenantId?: string\n): void {\n  reportError(\n    error,\n    {\n      operation,\n      key,\n      tenantId,\n    },\n    {\n      error_type: 'redis_error',\n      operation,\n    }\n  );\n}\n\n/**\n * Temant ile ilgili hataları raporlamak için özel fonksiyon\n */\nexport function reportTenantError(\n  error: unknown,\n  tenantId: string,\n  operation: string,\n  additionalData?: unknown\n): void {\n  reportError(\n    error,\n    {\n      tenantId,\n      operation,\n      additionalData,\n    },\n    {\n      error_type: 'tenant_error',\n      tenant_id: tenantId,\n      operation,\n    }\n  );\n}\n"],"names":["reportApiError","reportError","reportRedisError","reportTenantError","reportUIError","startPerformanceTracking","error","context","tags","level","window","tenantId","localStorage","getItem","tenant_id","Error","userId","Sentry","setUser","id","String","Object","keys","forEach","tagKey","setTag","setContext","captureException","extra","captureMessage","originalError","apiInfo","api","endpoint","method","statusCode","requestData","error_type","uiInfo","component","action","additionalData","name","op","data","console","log","finish","e","undefined","operation","key"],"mappings":";;;;;;;;;;;IAyDgBA,cAAc;eAAdA;;IA/CAC,WAAW;eAAXA;;IAoIAC,gBAAgB;eAAhBA;;IAuBAC,iBAAiB;eAAjBA;;IA/EAC,aAAa;eAAbA;;IA8BAC,wBAAwB;eAAxBA;;;gEApHQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB,SAASJ,YACdK,KAAc,EACdC,UAAmC,CAAC,CAAC,EACrCC,OAA+B,CAAC,CAAC,EACjCC,QAA8B,OAAO;IAErC,sCAAsC;IACtC,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAMC,WAAWC,aAAaC,OAAO,CAAC;QACtC,IAAIF,UAAU;YACZH,KAAKM,SAAS,GAAGH;QACnB;IACF;IAEA,IAAIL,iBAAiBS,OAAO;QAC1B,4CAA4C;QAC5C,IAAIR,QAAQS,MAAM,EAAE;YAClBC,QAAOC,OAAO,CAAC;gBAAEC,IAAIC,OAAOb,QAAQS,MAAM;YAAE;QAC9C;QAEA,oBAAoB;QACpBK,OAAOC,IAAI,CAACd,MAAMe,OAAO,CAAC,CAACC;YACzBP,QAAOQ,MAAM,CAACD,QAAQhB,IAAI,CAACgB,OAAO;QACpC;QAEA,4BAA4B;QAC5BP,QAAOS,UAAU,CAAC,kBAAkBnB;QAEpC,iBAAiB;QACjBU,QAAOU,gBAAgB,CAACrB,OAAO;YAC7BG;YACAD;YACAoB,OAAOrB;QACT;IACF,OAAO;QACL,8BAA8B;QAC9BU,QAAOY,cAAc,CAAC,OAAOvB,UAAU,WAAWA,QAAQ,mBAAmB;YAC3EG;YACAD;YACAoB,OAAO;gBAAE,GAAGrB,OAAO;gBAAEuB,eAAexB;YAAM;QAC5C;IACF;AACF;AAKO,SAASN,eACdM,KAAc,EACdyB,OAKC,EACDf,MAAe;IAEff,YACEK,OACA;QACEU;QACAgB,KAAKD,QAAQE,QAAQ;QACrBC,QAAQH,QAAQG,MAAM;QACtBC,YAAYJ,QAAQI,UAAU;QAC9BC,aAAaL,QAAQK,WAAW;IAClC,GACA;QACEC,YAAY;QACZJ,UAAUF,QAAQE,QAAQ;IAC5B;AAEJ;AAKO,SAAS7B,cACdE,KAAc,EACdgC,MAIC,EACDtB,MAAe;IAEff,YACEK,OACA;QACEU;QACAuB,WAAWD,OAAOC,SAAS;QAC3BC,QAAQF,OAAOE,MAAM;QACrBC,gBAAgBH,OAAOG,cAAc;IACvC,GACA;QACEJ,YAAY;QACZE,WAAWD,OAAOC,SAAS;IAC7B;AAEJ;AAQO,SAASlC,yBACdqC,IAAY,EACZC,EAAU,EACVC,IAA8B;IAE9B,IAAI;QACF,yEAAyE;QACzE,iEAAiE;QACjEC,QAAQC,GAAG,CAAC,CAAC,iCAAiC,EAAEJ,KAAK,EAAE,EAAEC,GAAG,CAAC,CAAC;QAE9D,qCAAqC;QACrC,OAAO;YACLD;YACAC;YACAC;YACAG,QAAQ,IAAMF,QAAQC,GAAG,CAAC,CAAC,iCAAiC,EAAEJ,MAAM;QACtE;IACF,EAAE,OAAOM,GAAG;QACVH,QAAQvC,KAAK,CAAC,oCAAoC0C;QAClD,OAAOC;IACT;AACF;AAKO,SAAS/C,iBACdI,KAAc,EACd4C,SAAiB,EACjBC,GAAY,EACZxC,QAAiB;IAEjBV,YACEK,OACA;QACE4C;QACAC;QACAxC;IACF,GACA;QACE0B,YAAY;QACZa;IACF;AAEJ;AAKO,SAAS/C,kBACdG,KAAc,EACdK,QAAgB,EAChBuC,SAAiB,EACjBT,cAAwB;IAExBxC,YACEK,OACA;QACEK;QACAuC;QACAT;IACF,GACA;QACEJ,YAAY;QACZvB,WAAWH;QACXuC;IACF;AAEJ"}