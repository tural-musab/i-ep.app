{"version":3,"sources":["/Users/turanmusabosman/Projects/i-ep.app/src/app/api/health/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport packageJson from '../../../../package.json';\nimport logger from '@/lib/logger';\n\n/**\n * GET /api/health\n *\n * Genel uygulama sağlık kontrolü\n */\nexport async function GET() {\n  try {\n    const timestamp = new Date().toISOString();\n    const version = packageJson.version;\n\n    return NextResponse.json({\n      status: 'healthy',\n      timestamp,\n      version,\n      checks: {\n        database: 'healthy',\n        redis: 'healthy',\n        externalApis: 'healthy',\n      },\n    });\n  } catch (error) {\n    logger.error({ err: error }, 'Health check hatası');\n\n    return NextResponse.json(\n      {\n        status: 'unhealthy',\n        timestamp: new Date().toISOString(),\n        error: error instanceof Error ? error.message : 'Bilinmeyen hata',\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":["GET","timestamp","Date","toISOString","version","packageJson","NextResponse","json","status","checks","database","redis","externalApis","error","logger","err","Error","message"],"mappings":";;;;+BASsBA;;;eAAAA;;;wBATO;oEACL;+DACL;;;;;;AAOZ,eAAeA;IACpB,IAAI;QACF,MAAMC,YAAY,IAAIC,OAAOC,WAAW;QACxC,MAAMC,UAAUC,oBAAW,CAACD,OAAO;QAEnC,OAAOE,oBAAY,CAACC,IAAI,CAAC;YACvBC,QAAQ;YACRP;YACAG;YACAK,QAAQ;gBACNC,UAAU;gBACVC,OAAO;gBACPC,cAAc;YAChB;QACF;IACF,EAAE,OAAOC,OAAO;QACdC,eAAM,CAACD,KAAK,CAAC;YAAEE,KAAKF;QAAM,GAAG;QAE7B,OAAOP,oBAAY,CAACC,IAAI,CACtB;YACEC,QAAQ;YACRP,WAAW,IAAIC,OAAOC,WAAW;YACjCU,OAAOA,iBAAiBG,QAAQH,MAAMI,OAAO,GAAG;QAClD,GACA;YAAET,QAAQ;QAAI;IAElB;AACF"}