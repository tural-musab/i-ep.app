{"version":3,"sources":["/Users/turanmusabosman/Projects/i-ep.app/src/app/api/ready/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { supabase } from '@/lib/supabase/client';\nimport logger from '@/lib/logger';\n\n/**\n * GET /api/ready\n *\n * Uygulama hazır olma durumu kontrolü - DB bağlantısını test eder\n */\nexport async function GET() {\n  const timestamp = new Date().toISOString();\n\n  try {\n    // Supabase bağlantısını test etmek için basit bir query yap\n    const { error } = await supabase.from('auth.users').select('count').limit(1).single();\n\n    if (error) {\n      logger.error({ err: error }, 'Database bağlantı hatası');\n\n      return NextResponse.json(\n        {\n          status: 'not_ready',\n          timestamp,\n          dbConnection: false,\n        },\n        { status: 503 }\n      );\n    }\n\n    return NextResponse.json({\n      status: 'ready',\n      timestamp,\n      dbConnection: true,\n    });\n  } catch (error) {\n    logger.error({ err: error }, 'Ready check hatası');\n\n    return NextResponse.json(\n      {\n        status: 'not_ready',\n        timestamp,\n        dbConnection: false,\n      },\n      { status: 503 }\n    );\n  }\n}\n"],"names":["GET","timestamp","Date","toISOString","error","supabase","from","select","limit","single","logger","err","NextResponse","json","status","dbConnection"],"mappings":";;;;+BASsBA;;;eAAAA;;;wBATO;wBACJ;+DACN;;;;;;AAOZ,eAAeA;IACpB,MAAMC,YAAY,IAAIC,OAAOC,WAAW;IAExC,IAAI;QACF,4DAA4D;QAC5D,MAAM,EAAEC,KAAK,EAAE,GAAG,MAAMC,gBAAQ,CAACC,IAAI,CAAC,cAAcC,MAAM,CAAC,SAASC,KAAK,CAAC,GAAGC,MAAM;QAEnF,IAAIL,OAAO;YACTM,eAAM,CAACN,KAAK,CAAC;gBAAEO,KAAKP;YAAM,GAAG;YAE7B,OAAOQ,oBAAY,CAACC,IAAI,CACtB;gBACEC,QAAQ;gBACRb;gBACAc,cAAc;YAChB,GACA;gBAAED,QAAQ;YAAI;QAElB;QAEA,OAAOF,oBAAY,CAACC,IAAI,CAAC;YACvBC,QAAQ;YACRb;YACAc,cAAc;QAChB;IACF,EAAE,OAAOX,OAAO;QACdM,eAAM,CAACN,KAAK,CAAC;YAAEO,KAAKP;QAAM,GAAG;QAE7B,OAAOQ,oBAAY,CAACC,IAAI,CACtB;YACEC,QAAQ;YACRb;YACAc,cAAc;QAChB,GACA;YAAED,QAAQ;QAAI;IAElB;AACF"}