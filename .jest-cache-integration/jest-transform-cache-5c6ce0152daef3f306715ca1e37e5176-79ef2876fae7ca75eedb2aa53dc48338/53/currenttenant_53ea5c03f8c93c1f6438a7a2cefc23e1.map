{"version":3,"sources":["/Users/turanmusabosman/Projects/i-ep.app/src/lib/tenant/current-tenant.ts"],"sourcesContent":["/**\n * Server-side render sÃ¼reÃ§lerinde mevcut tenant bilgilerine eriÅŸim\n * Referans: docs/architecture/multi-tenant-strategy.md\n */\n\nimport { headers } from 'next/headers';\nimport { TenantInfo } from './tenant-domain-resolver';\nimport { createServerSupabaseClient } from '../supabase/server';\n\n/**\n * Server tarafÄ±nda Ã§alÄ±ÅŸan bileÅŸenler ve API route'larÄ± iÃ§in\n * current tenant bilgisini header'lardan alÄ±r.\n *\n * @returns Mevcut tenant bilgisi veya null\n */\nexport async function getCurrentTenant(): Promise<TenantInfo | null> {\n  try {\n    const headersList = await headers();\n\n    // Header'lardan tenant bilgilerini al\n    const tenantId = headersList.get('x-tenant-id');\n    const tenantHostname = headersList.get('x-tenant-hostname');\n    const tenantName = headersList.get('x-tenant-name');\n    const isPrimary = headersList.get('x-tenant-primary') === 'true';\n    const isCustomDomain = headersList.get('x-tenant-custom-domain') === 'true';\n\n    // DEVELOPMENT MODE: Create mock tenant if no headers\n    if ((!tenantId || !tenantHostname) && process.env.NODE_ENV === 'development') {\n      console.log('ðŸ”§ [DEV] No tenant headers found, creating mock tenant for development');\n      return {\n        id: 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',\n        hostname: 'localhost:3000',\n        name: 'Demo Okul',\n        isPrimary: true,\n        isCustomDomain: false,\n        settings: {\n          school_type: 'primary',\n          academic_year: '2024-2025',\n          timezone: 'Europe/Istanbul',\n        }\n      };\n    }\n    \n    if (!tenantId || !tenantHostname) {\n      return null;\n    }\n\n    // Temel tenant bilgisi\n    const tenant: TenantInfo = {\n      id: tenantId,\n      name: tenantName || undefined,\n      domain: tenantHostname,\n      isPrimary: isPrimary,\n      isCustomDomain: isCustomDomain,\n    };\n\n    // EÄŸer tenant adÄ± belirtilmemiÅŸse, veritabanÄ±ndan al\n    if (!tenant.name) {\n      const supabase = createServerSupabaseClient();\n      const { data } = await supabase.from('tenants').select('name').eq('id', tenantId).single();\n\n      if (data) {\n        tenant.name = data.name;\n      }\n    }\n\n    return tenant;\n  } catch (error) {\n    console.error('Tenant bilgisi alÄ±namadÄ±:', error);\n    return null;\n  }\n}\n\n/**\n * Tenant domain bilgisini oluÅŸturur\n *\n * @param subdomain Tenant subdomain\n * @returns Tam domain adresi\n */\nexport function buildTenantDomain(subdomain: string): string {\n  // Extract domain from BASE_URL  \n  const BASE_URL = process.env.NEXT_PUBLIC_BASE_URL || 'https://i-ep.app';\n  const BASE_DOMAIN = new URL(BASE_URL).hostname;\n  return `${subdomain}.${BASE_DOMAIN}`;\n}\n\n/**\n * Tenant iÃ§in tam URL oluÅŸturur\n *\n * @param subdomain Tenant subdomain\n * @param path URL yolu (opsiyonel)\n * @returns Tam URL\n */\nexport function buildTenantUrl(subdomain: string, path = '/'): string {\n  const domain = buildTenantDomain(subdomain);\n  const protocol = process.env.NODE_ENV === 'development' ? 'http' : 'https';\n  return `${protocol}://${domain}${path.startsWith('/') ? path : `/${path}`}`;\n}\n"],"names":["buildTenantDomain","buildTenantUrl","getCurrentTenant","headersList","headers","tenantId","get","tenantHostname","tenantName","isPrimary","isCustomDomain","process","env","NODE_ENV","console","log","id","hostname","name","settings","school_type","academic_year","timezone","tenant","undefined","domain","supabase","createServerSupabaseClient","data","from","select","eq","single","error","subdomain","BASE_URL","NEXT_PUBLIC_BASE_URL","BASE_DOMAIN","URL","path","protocol","startsWith"],"mappings":"AAAA;;;CAGC;;;;;;;;;;;IA4EeA,iBAAiB;eAAjBA;;IAcAC,cAAc;eAAdA;;IA9EMC,gBAAgB;eAAhBA;;;yBAVE;wBAEmB;AAQpC,eAAeA;IACpB,IAAI;QACF,MAAMC,cAAc,MAAMC,IAAAA,gBAAO;QAEjC,sCAAsC;QACtC,MAAMC,WAAWF,YAAYG,GAAG,CAAC;QACjC,MAAMC,iBAAiBJ,YAAYG,GAAG,CAAC;QACvC,MAAME,aAAaL,YAAYG,GAAG,CAAC;QACnC,MAAMG,YAAYN,YAAYG,GAAG,CAAC,wBAAwB;QAC1D,MAAMI,iBAAiBP,YAAYG,GAAG,CAAC,8BAA8B;QAErE,qDAAqD;QACrD,IAAI,AAAC,CAAA,CAACD,YAAY,CAACE,cAAa,KAAMI,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;YAC5EC,QAAQC,GAAG,CAAC;YACZ,OAAO;gBACLC,IAAI;gBACJC,UAAU;gBACVC,MAAM;gBACNT,WAAW;gBACXC,gBAAgB;gBAChBS,UAAU;oBACRC,aAAa;oBACbC,eAAe;oBACfC,UAAU;gBACZ;YACF;QACF;QAEA,IAAI,CAACjB,YAAY,CAACE,gBAAgB;YAChC,OAAO;QACT;QAEA,uBAAuB;QACvB,MAAMgB,SAAqB;YACzBP,IAAIX;YACJa,MAAMV,cAAcgB;YACpBC,QAAQlB;YACRE,WAAWA;YACXC,gBAAgBA;QAClB;QAEA,qDAAqD;QACrD,IAAI,CAACa,OAAOL,IAAI,EAAE;YAChB,MAAMQ,WAAWC,IAAAA,kCAA0B;YAC3C,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMF,SAASG,IAAI,CAAC,WAAWC,MAAM,CAAC,QAAQC,EAAE,CAAC,MAAM1B,UAAU2B,MAAM;YAExF,IAAIJ,MAAM;gBACRL,OAAOL,IAAI,GAAGU,KAAKV,IAAI;YACzB;QACF;QAEA,OAAOK;IACT,EAAE,OAAOU,OAAO;QACdnB,QAAQmB,KAAK,CAAC,6BAA6BA;QAC3C,OAAO;IACT;AACF;AAQO,SAASjC,kBAAkBkC,SAAiB;IACjD,iCAAiC;IACjC,MAAMC,WAAWxB,QAAQC,GAAG,CAACwB,oBAAoB,IAAI;IACrD,MAAMC,cAAc,IAAIC,IAAIH,UAAUlB,QAAQ;IAC9C,OAAO,GAAGiB,UAAU,CAAC,EAAEG,aAAa;AACtC;AASO,SAASpC,eAAeiC,SAAiB,EAAEK,OAAO,GAAG;IAC1D,MAAMd,SAASzB,kBAAkBkC;IACjC,MAAMM,WAAW7B,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,SAAS;IACnE,OAAO,GAAG2B,SAAS,GAAG,EAAEf,SAASc,KAAKE,UAAU,CAAC,OAAOF,OAAO,CAAC,CAAC,EAAEA,MAAM,EAAE;AAC7E"}