{"version":3,"names":["_getJestObj","mock","init","jest","fn","captureException","captureMessage","withScope","callback","setTag","setLevel","createTransport","sendMail","mockResolvedValue","messageId","payment","create","status","_defineProperty","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","setTimeout","global","console","log","process","env","JEST_VERBOSE","debug","info","warn","error","on","reason","promise","testHelpers","checkDatabaseConnection","createClient","supabase","NEXT_PUBLIC_SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","data","from","select","limit","connected","err","checkRedisConnection","Redis","redis","url","REDIS_URL","UPSTASH_REDIS_URL","token","UPSTASH_REDIS_TOKEN","set","ex","result","get","del","getTestTenantId","TEST_TENANT_ID","generateTestUser","role","baseUser","id","Date","now","email","tenant_id","created_at","toISOString","updated_at","name","permissions"],"sources":["jest.setup.integration.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-require-imports */\n/**\n * ƒ∞-EP.APP - Integration Test Setup Configuration\n * Bu dosya integration testleri i√ßin Jest setup'ƒ±nƒ± yapar\n */\n\n// Set up test timeout for integration tests\njest.setTimeout(30000); // 30 seconds for database operations\n\n// Global test utilities and mocks for integration tests\nglobal.console = {\n  ...console,\n  // Less verbose logging in integration tests\n  log: process.env.JEST_VERBOSE === 'true' ? console.log : jest.fn(),\n  debug: jest.fn(), // Always mock debug\n  info: process.env.JEST_VERBOSE === 'true' ? console.info : jest.fn(),\n  warn: console.warn, // Always show warnings\n  error: console.error, // Always show errors\n};\n\n// Mock external services for integration tests (but keep DB/Redis real)\njest.mock('@sentry/nextjs', () => ({\n  init: jest.fn(),\n  captureException: jest.fn(),\n  captureMessage: jest.fn(),\n  withScope: jest.fn((callback) => callback({ setTag: jest.fn(), setLevel: jest.fn() })),\n}));\n\n// Mock email services in integration tests\njest.mock('nodemailer', () => ({\n  createTransport: jest.fn(() => ({\n    sendMail: jest.fn().mockResolvedValue({ messageId: 'test-message-id' }),\n  })),\n}));\n\n// Mock payment services in integration tests\njest.mock('iyzipay', () => ({\n  init: jest.fn(() => ({\n    payment: {\n      create: jest.fn().mockResolvedValue({ status: 'success' }),\n    },\n  })),\n}));\n\n// Setup global error handling for integration tests\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Integration Test - Unhandled Rejection at:', promise, 'reason:', reason);\n});\n\n// Global test helpers for integration tests\nglobal.testHelpers = {\n  // Database connection check utility\n  async checkDatabaseConnection() {\n    const { createClient } = require('@supabase/supabase-js');\n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL,\n      process.env.SUPABASE_SERVICE_ROLE_KEY\n    );\n    \n    try {\n      const { data, error } = await supabase.from('users').select('id').limit(1);\n      return { connected: !error, error };\n    } catch (err) {\n      return { connected: false, error: err };\n    }\n  },\n\n  // Redis connection check utility\n  async checkRedisConnection() {\n    try {\n      const { Redis } = require('@upstash/redis');\n      const redis = new Redis({\n        url: process.env.REDIS_URL || process.env.UPSTASH_REDIS_URL,\n        token: process.env.UPSTASH_REDIS_TOKEN || 'test-token',\n      });\n      \n      await redis.set('test-key', 'test-value', { ex: 1 });\n      const result = await redis.get('test-key');\n      await redis.del('test-key');\n      \n      return { connected: result === 'test-value', error: null };\n    } catch (err) {\n      return { connected: false, error: err };\n    }\n  },\n\n  // Test tenant ID generator\n  getTestTenantId() {\n    return process.env.TEST_TENANT_ID || 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa';\n  },\n\n  // Test user data generator\n  generateTestUser(role = 'student') {\n    const baseUser = {\n      id: `test-${role}-${Date.now()}`,\n      email: `test-${role}@i-ep.app`,\n      tenant_id: this.getTestTenantId(),\n      role,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n    };\n\n    switch (role) {\n      case 'admin':\n        return { ...baseUser, name: 'Test Admin', permissions: ['all'] };\n      case 'teacher':\n        return { ...baseUser, name: 'Test Teacher', permissions: ['grade', 'assignment'] };\n      case 'student':\n        return { ...baseUser, name: 'Test Student', permissions: ['view'] };\n      case 'parent':\n        return { ...baseUser, name: 'Test Parent', permissions: ['view_child'] };\n      default:\n        return baseUser;\n    }\n  }\n};\n\nconsole.log('üîß Integration test setup completed');\nconsole.log('üéØ Test environment: integration');\nconsole.log('‚è±Ô∏è  Test timeout: 30 seconds');\nconsole.log('üõ†Ô∏è  Global test helpers available');"],"mappings":"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","ignoreList":[]}