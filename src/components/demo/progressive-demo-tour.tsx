'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';

interface DemoTourProps {
  role: string;
  onComplete?: () => void;
}

interface TourStep {
  id: string;
  title: string;
  description: string;
  action?: string;
  duration: number;
}

const TOUR_STEPS: Record<string, TourStep[]> = {
  admin: [
    {
      id: 'welcome',
      title: 'Ho≈ü Geldiniz Okul M√ºd√ºr√º!',
      description: 'ƒ∞-EP.APP ile okul y√∂netimini kolayla≈ütƒ±racak √∂zellikleri ke≈üfedin.',
      duration: 3000
    },
    {
      id: 'dashboard',
      title: 'Ana Dashboard',
      description: 'Okula ait t√ºm verileri tek ekranda g√∂r√ºnt√ºleyin.',
      duration: 4000
    },
    {
      id: 'students',
      title: '√ñƒürenci Y√∂netimi',
      description: '√ñƒürenci kayƒ±tlarƒ±, devam durumu ve not takibini yapƒ±n.',
      action: '√ñƒürenci listesini g√∂r√ºnt√ºle',
      duration: 5000
    },
    {
      id: 'teachers',
      title: '√ñƒüretmen Koordinasyonu',
      description: '√ñƒüretmenlerinizin performansƒ±nƒ± ve derslerini takip edin.',
      action: '√ñƒüretmen dashboard\'ƒ±na g√∂z atƒ±n',
      duration: 5000
    },
    {
      id: 'reports',
      title: 'Raporlar ve Analizler',
      description: 'Detaylƒ± raporlarla okulunuzun performansƒ±nƒ± deƒüerlendirin.',
      action: '√ñrnek rapor olu≈üturun',
      duration: 4000
    }
  ],
  teacher: [
    {
      id: 'welcome',
      title: 'Ho≈ü Geldiniz √ñƒüretmen!',
      description: 'Sƒ±nƒ±f y√∂netiminizi kolayla≈ütƒ±racak ara√ßlarƒ± ke≈üfedin.',
      duration: 3000
    },
    {
      id: 'assignments',
      title: '√ñdev Y√∂netimi',
      description: '√ñdevlerinizi olu≈üturun, daƒüƒ±tƒ±n ve deƒüerlendirin.',
      action: 'Yeni √∂dev olu≈üturun',
      duration: 5000
    },
    {
      id: 'grades',
      title: 'Not Sistemi',
      description: '√ñƒürencilerinizin notlarƒ±nƒ± girin ve takip edin.',
      action: 'Not giri≈üi yapƒ±n',
      duration: 5000
    },
    {
      id: 'attendance',
      title: 'Devam Takibi',
      description: 'G√ºnl√ºk devam durumunu kaydedin ve raporlayƒ±n.',
      action: 'Devam kaydƒ± alƒ±n',
      duration: 4000
    },
    {
      id: 'communication',
      title: 'Veli ƒ∞leti≈üimi',
      description: 'Velilerle doƒürudan ileti≈üim kurun.',
      action: 'Veli mesajlarƒ±nƒ± inceleyin',
      duration: 4000
    }
  ],
  student: [
    {
      id: 'welcome',
      title: 'Ho≈ü Geldin √ñƒürenci!',
      description: 'Derslerini ve √∂devlerini takip etmek artƒ±k √ßok kolay.',
      duration: 3000
    },
    {
      id: 'assignments',
      title: '√ñdevlerim',
      description: 'T√ºm √∂devlerini g√∂r√ºnt√ºle ve teslim et.',
      action: '√ñdev listesini g√∂r',
      duration: 4000
    },
    {
      id: 'grades',
      title: 'Notlarƒ±m',
      description: 'Sƒ±nav sonu√ßlarƒ±nƒ± ve genel notlarƒ±nƒ± incele.',
      action: 'Not durumunu kontrol et',
      duration: 4000
    },
    {
      id: 'schedule',
      title: 'Ders Programƒ±m',
      description: 'Haftalƒ±k ders programƒ±nƒ± ve etkinlikleri g√∂r.',
      action: 'Bu haftaki dersleri incele',
      duration: 4000
    }
  ],
  parent: [
    {
      id: 'welcome',
      title: 'Ho≈ü Geldiniz Sayƒ±n Veli!',
      description: '√áocuƒüunuzun eƒüitim s√ºrecini yakƒ±ndan takip edin.',
      duration: 3000
    },
    {
      id: 'progress',
      title: '√áocuƒüumun Geli≈üimi',
      description: 'Akademik performans ve devam durumunu g√∂r√ºnt√ºleyin.',
      action: 'ƒ∞lerleme raporunu inceleyin',
      duration: 5000
    },
    {
      id: 'communication',
      title: '√ñƒüretmenlerle ƒ∞leti≈üim',
      description: '√ñƒüretmenlerle direkt mesajla≈üƒ±n.',
      action: '√ñƒüretmen mesajlarƒ±nƒ± okuyun',
      duration: 4000
    },
    {
      id: 'meetings',
      title: 'Veli Toplantƒ±larƒ±',
      description: 'Toplantƒ± takvimini g√∂r√ºn ve randevu alƒ±n.',
      action: 'Toplantƒ± planlarƒ±nƒ± g√∂r√ºn',
      duration: 4000
    }
  ]
};

export function ProgressiveDemoTour({ role, onComplete }: DemoTourProps) {
  const router = useRouter();
  const [currentStep, setCurrentStep] = useState(0);
  const [isVisible, setIsVisible] = useState(true);
  const [tourSteps] = useState(TOUR_STEPS[role] || TOUR_STEPS.admin);

  useEffect(() => {
    if (!isVisible || currentStep >= tourSteps.length) return;

    const timer = setTimeout(() => {
      if (currentStep < tourSteps.length - 1) {
        setCurrentStep(currentStep + 1);
      } else {
        // Tour tamamlandƒ±
        setIsVisible(false);
        onComplete?.();
      }
    }, tourSteps[currentStep].duration);

    return () => clearTimeout(timer);
  }, [currentStep, isVisible, tourSteps, onComplete]);

  const handleSkipTour = () => {
    setIsVisible(false);
    onComplete?.();
  };

  const handleActionClick = () => {
    console.log(`üéØ Demo action: ${tourSteps[currentStep].action}`);
    // Etkile≈üimli aksiyonlar burada sim√ºle edilebilir
  };

  if (!isVisible || currentStep >= tourSteps.length) {
    return null;
  }

  const step = tourSteps[currentStep];
  const progress = ((currentStep + 1) / tourSteps.length) * 100;

  return (
    <div className="fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg shadow-xl max-w-md w-full p-6">
        {/* Progress Bar */}
        <div className="mb-4">
          <div className="flex justify-between text-sm text-gray-600 mb-2">
            <span>Demo Turu</span>
            <span>{currentStep + 1} / {tourSteps.length}</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-2">
            <div 
              className="bg-blue-600 h-2 rounded-full transition-all duration-300"
              style={{ width: `${progress}%` }}
            />
          </div>
        </div>

        {/* Content */}
        <div className="text-center mb-6">
          <h3 className="text-xl font-bold text-gray-900 mb-2">
            {step.title}
          </h3>
          <p className="text-gray-600 mb-4">
            {step.description}
          </p>

          {step.action && (
            <button
              onClick={handleActionClick}
              className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
            >
              <svg className="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
              </svg>
              {step.action}
            </button>
          )}
        </div>

        {/* Controls */}
        <div className="flex justify-between">
          <button
            onClick={handleSkipTour}
            className="px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors"
          >
            Turu Atla
          </button>
          
          <div className="flex space-x-2">
            {currentStep > 0 && (
              <button
                onClick={() => setCurrentStep(currentStep - 1)}
                className="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors"
              >
                Geri
              </button>
            )}
            
            <button
              onClick={() => {
                if (currentStep < tourSteps.length - 1) {
                  setCurrentStep(currentStep + 1);
                } else {
                  handleSkipTour();
                }
              }}
              className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
            >
              {currentStep < tourSteps.length - 1 ? 'ƒ∞leri' : 'Turu Bitir'}
            </button>
          </div>
        </div>

        {/* Trial Signup CTA (last step) */}
        {currentStep === tourSteps.length - 1 && (
          <div className="mt-6 p-4 bg-green-50 rounded-lg border border-green-200">
            <h4 className="font-semibold text-green-800 mb-2">
              Demo'yu beƒüendiniz mi?
            </h4>
            <p className="text-sm text-green-700 mb-3">
              7 g√ºnl√ºk √ºcretsiz deneme s√ºr√ºm√ºyle ba≈ülayƒ±n!
            </p>
            <button
              onClick={() => router.push('/onboarding')}
              className="w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors"
            >
              √úcretsiz Denemeye Ba≈üla
            </button>
          </div>
        )}
      </div>
    </div>
  );
}