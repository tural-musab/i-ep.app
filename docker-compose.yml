# =============================================================================
# İ-EP.APP (Iqra Eğitim Portalı) Docker Compose
# =============================================================================
# Local development environment setup
# Includes: Next.js App, PostgreSQL, Redis, Adminer (DB GUI)

version: '3.8'

services:
  # =============================================================================
  # İ-EP.APP Next.js Application
  # =============================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    container_name: i-ep-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_NAME=İ-EP.APP
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - NEXT_PUBLIC_DOMAIN=i-ep.app
      - NEXT_PUBLIC_SUPABASE_URL=http://localhost:54321
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJeaVgMSE5a-4dA7fJjnKhLiVHqJJXg0U
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/i_ep_app
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-key-min-32-characters
      - UPSTASH_REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - i-ep-network

  # =============================================================================
  # PostgreSQL Database
  # =============================================================================
  postgres:
    image: supabase/postgres:15.1.0.117
    container_name: i-ep-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=tr_TR.UTF-8 --lc-ctype=tr_TR.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - i-ep-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # Redis Cache
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: i-ep-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - i-ep-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # =============================================================================
  # Supabase Studio
  # =============================================================================
  studio:
    image: supabase/studio:latest
    container_name: i-ep-supabase-studio
    ports:
      - "54326:3000"
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: postgres
      DEFAULT_ORGANIZATION_NAME: İ-EP.APP
      DEFAULT_PROJECT_NAME: İ-EP.APP Development
      SUPABASE_URL: http://kong:8000
      SUPABASE_PUBLIC_URL: http://localhost:54326
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJeaVgMSE5a-4dA7fJjnKhLiVHqJJXg0U
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    depends_on:
      - kong
      - auth
      - rest
      - storage
      - meta
    networks:
      - i-ep-network
    profiles:
      - supabase

  # =============================================================================
  # Supabase Services
  # =============================================================================
  kong:
    image: kong:2.8.1
    container_name: i-ep-supabase-kong
    ports:
      - "54325:8000"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml
    networks:
      - i-ep-network
    profiles:
      - supabase

  auth:
    image: supabase/gotrue:v2.132.3
    container_name: i-ep-supabase-auth
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_HOST: postgres
      GOTRUE_DB_PORT: 5432
      GOTRUE_DB_USER: postgres
      GOTRUE_DB_PASSWORD: postgres
      GOTRUE_DB_NAME: postgres
      GOTRUE_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_SITE_URL: http://localhost:54321
      GOTRUE_MAILER_AUTOCONFIRM: "true"
      GOTRUE_SMS_AUTOCONFIRM: "true"
    depends_on:
      - postgres
    networks:
      - i-ep-network
    profiles:
      - supabase

  rest:
    image: postgrest/postgrest:v11.2.0
    container_name: i-ep-supabase-rest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/postgres
      PGRST_DB_SCHEMA: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      PGRST_DB_USE_LEGACY_GUCS: "false"
    depends_on:
      - postgres
    networks:
      - i-ep-network
    profiles:
      - supabase

  storage:
    image: supabase/storage-api:v0.40.4
    container_name: i-ep-supabase-storage
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJeaVgMSE5a-4dA7fJjnKhLiVHqJJXg0U
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      PROJECT_REF: default
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
    volumes:
      - supabase_storage:/var/lib/storage
    depends_on:
      - rest
      - postgres
    networks:
      - i-ep-network
    profiles:
      - supabase

  meta:
    image: supabase/postgres-meta:v0.68.0
    container_name: i-ep-supabase-meta
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgres
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: postgres
    depends_on:
      - postgres
    networks:
      - i-ep-network
    profiles:
      - supabase

  # =============================================================================
  # Adminer (Database GUI)
  # =============================================================================
  adminer:
    image: adminer:latest
    container_name: i-ep-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - i-ep-network
    profiles:
      - tools  # Optional service - run with: docker-compose --profile tools up

  # =============================================================================
  # Redis Commander (Redis GUI)
  # =============================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: i-ep-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis_password
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - i-ep-network
    profiles:
      - tools  # Optional service - run with: docker-compose --profile tools up

  # =============================================================================
  # Mailhog (Email Testing)
  # =============================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: i-ep-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    restart: unless-stopped
    networks:
      - i-ep-network
    profiles:
      - tools  # Optional service - run with: docker-compose --profile tools up

# =============================================================================
# Docker Volumes
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  supabase_data:
    driver: local
  supabase_storage:
    driver: local

# =============================================================================
# Docker Networks
# =============================================================================
networks:
  i-ep-network:
    driver: bridge

# =============================================================================
# Docker Compose Usage Instructions:
# =============================================================================
#
# Start basic development environment:
# docker-compose up -d
#
# Start with all tools (Adminer, Redis Commander, Mailhog):
# docker-compose --profile tools up -d
#
# Start with Supabase local:
# docker-compose --profile supabase up -d
#
# Start everything:
# docker-compose --profile tools --profile supabase up -d
#
# Stop all services:
# docker-compose down
#
# Stop and remove volumes (WARNING: This will delete all data):
# docker-compose down -v
#
# View logs:
# docker-compose logs -f app
#
# Rebuild and restart:
# docker-compose up --build -d
#
# Access services:
# - İ-EP.APP: http://localhost:3000
# - Adminer (DB GUI): http://localhost:8080
# - Redis Commander: http://localhost:8081
# - Mailhog (Email): http://localhost:8025
# - Supabase Studio: http://localhost:54321
#
# ============================================================================= 