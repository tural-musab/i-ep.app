# ðŸ”’ Private Vulnerability Reporting Workflow

name: Private Vulnerability Reporting

on:
  # Manuel tetikleme
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'generate_report'
        type: choice
        options:
          - generate_report
          - update_status
          - security_audit

  # Schedule - gÃ¼nlÃ¼k gÃ¼venlik kontrolÃ¼
  schedule:
    - cron: '0 6 * * *' # Her gÃ¼n saat 06:00'da

  # Push events
  push:
    branches: [main, develop]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'

# Environment variables
env:
  SECURITY_EMAIL: security@i-ep.app
  SLACK_CHANNEL: '#security'
  TEAM_MEMBERS: 'tural-musab'

jobs:
  # GÃ¼venlik aÃ§Ä±ÄŸÄ± raporu oluÅŸturma
  generate_security_report:
    name: Generate Security Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        id: security_audit
        run: |
          echo "Running security audit..."
          npm audit --audit-level=moderate --json > audit-report.json || true

          # Audit sonuÃ§larÄ±nÄ± analiz et
          if [ -f audit-report.json ]; then
            VULNERABILITIES=$(jq '.metadata.vulnerabilities.total' audit-report.json)
            echo "vulnerabilities=$VULNERABILITIES" >> $GITHUB_OUTPUT
          else
            echo "vulnerabilities=0" >> $GITHUB_OUTPUT
          fi

      - name: Generate security report
        run: |
          echo "Generating security report..."

          cat > security-report.md << EOF
          # Security Report - $(date +%Y-%m-%d)

          ## Summary
          - **Repository:** ${{ github.repository }}
          - **Branch:** ${{ github.ref }}
          - **Commit:** ${{ github.sha }}
          - **Generated:** $(date)

          ## Vulnerability Scan Results
          - **Total Vulnerabilities:** ${{ steps.security_audit.outputs.vulnerabilities }}

          ## Dependencies
          - **Total Dependencies:** $(npm list --depth=0 | wc -l)
          - **Dev Dependencies:** $(npm list --depth=0 --dev | wc -l)

          ## Security Measures
          - âœ… Multi-Factor Authentication (MFA)
          - âœ… Rate Limiting
          - âœ… Row Level Security (RLS)
          - âœ… Security Headers
          - âœ… Input Validation
          - âœ… SQL Injection Protection
          - âœ… XSS Protection
          - âœ… CSRF Protection

          ## Recommendations
          1. Keep dependencies updated
          2. Monitor security advisories
          3. Regular security audits
          4. Penetration testing
          5. Security training for team

          EOF

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Create security report issue
        if: steps.security_audit.outputs.vulnerabilities != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');

            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ”’ Security Report - $(date +%Y-%m-%d)`,
              body: report,
              labels: ['security', 'report', 'automated'],
              assignees: ['${{ env.TEAM_MEMBERS }}']
            });

            console.log(`Created security report issue: ${issue.number}`);

  # GÃ¼venlik durumu gÃ¼ncelleme
  update_security_status:
    name: Update Security Status
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'update_status'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update security status
        run: |
          echo "Updating security status..."

          # GÃ¼venlik durumu dosyasÄ± oluÅŸtur
          cat > SECURITY_STATUS.md << EOF
          # Security Status - $(date +%Y-%m-%d)

          ## Current Status
          - **Last Updated:** $(date)
          - **Repository:** ${{ github.repository }}
          - **Branch:** ${{ github.ref }}

          ## Active Security Measures
          - âœ… Security Policy: Active
          - âœ… Dependabot: Enabled
          - âœ… Private Vulnerability Reporting: Enabled
          - âœ… Security Headers: Configured
          - âœ… Rate Limiting: Active
          - âœ… MFA: Enabled
          - âœ… RLS: Active

          ## Recent Activities
          - Security policy updated
          - Dependabot configuration added
          - Private vulnerability reporting enabled

          ## Next Steps
          - Monitor security advisories
          - Regular dependency updates
          - Security training sessions
          - Penetration testing

          EOF

      - name: Commit security status
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add SECURITY_STATUS.md
          git commit -m "ðŸ”’ Update security status" || exit 0
          git push

  # GÃ¼venlik denetimi
  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'security_audit'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run comprehensive security audit
        run: |
          echo "Running comprehensive security audit..."

          # npm audit
          echo "=== npm audit ==="
          npm audit --audit-level=moderate || true

          # npm outdated
          echo "=== npm outdated ==="
          npm outdated || true

          # Security check
          echo "=== Security check ==="
          npm audit --audit-level=moderate --json > audit-report.json || true

          if [ -f audit-report.json ]; then
            echo "Audit report generated"
            cat audit-report.json | jq '.metadata.vulnerabilities'
          else
            echo "No vulnerabilities found"
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-report.json
