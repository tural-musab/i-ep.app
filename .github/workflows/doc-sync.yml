name: Documentation Auto-Sync

on:
  push:
    branches: [ main, development ]
    paths:
      - 'PROGRESS.md'
      - 'SPRINT-PLANNING-2025.md'
      - 'PROJECT-STATUS-REPORT-*.md'
      - 'DEVELOPMENT-ROADMAP-2025.md'
      - 'src/lib/storage/**'
  
  pull_request:
    branches: [ main ]
    paths:
      - 'PROGRESS.md'
      - 'SPRINT-PLANNING-2025.md'
      - 'PROJECT-STATUS-REPORT-*.md'
      - 'DEVELOPMENT-ROADMAP-2025.md'
      - 'src/lib/storage/**'

  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force documentation synchronization'
        required: false
        default: 'false'
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  doc-sync:
    runs-on: ubuntu-latest
    name: Sync Documentation Plan
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --only=production
          npm install chokidar

      - name: Check for documentation changes
        id: check_changes
        run: |
          # İzlenen dosyalarda değişiklik var mı kontrol et
          changed_files=$(git diff --name-only HEAD~1 HEAD | grep -E "(PROGRESS\.md|SPRINT-PLANNING-2025\.md|PROJECT-STATUS-REPORT.*\.md|DEVELOPMENT-ROADMAP-2025\.md|src/lib/storage/)" || true)
          
          if [ -n "$changed_files" ] || [ "${{ github.event.inputs.force_sync }}" = "true" ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "📝 Değişiklik tespit edildi:"
            echo "$changed_files"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Dokumentasyon senkronizasyonu gerektiren değişiklik bulunamadı."
          fi

      - name: Run documentation sync
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "🔄 Dokümantasyon senkronizasyonu başlatılıyor..."
          
          # Doc sync script'ini çalıştır
          node scripts/doc-sync.js sync
          
          echo "✅ Dokümantasyon senkronizasyonu tamamlandı"

      - name: Check for documentation plan changes
        if: steps.check_changes.outputs.changes_detected == 'true'
        id: check_doc_changes
        run: |
          # Dokümantasyon planında değişiklik var mı kontrol et
          if git diff --quiet docs-site/docs/meta/dokumantasyon-iyilestirme-plani-2025.html; then
            echo "doc_changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Dokümantasyon planında değişiklik yok"
          else
            echo "doc_changed=true" >> $GITHUB_OUTPUT
            echo "📋 Dokümantasyon planı güncellendi"
          fi

      - name: Commit documentation updates
        if: steps.check_doc_changes.outputs.doc_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Dokümantasyon planı değişikliklerini commit et
          git add docs-site/docs/meta/dokumantasyon-iyilestirme-plani-2025.html
          
          # Commit mesajını oluştur
          commit_message="docs: otomatik dokümantasyon senkronizasyonu

          🤖 GitHub Actions tarafından otomatik olarak güncellendi
          
          Değişiklikler:
          - Proje durumu güncellendi
          - Sprint ilerlemesi senkronize edildi
          - Storage implementation durumu güncellendi
          
          Commit SHA: ${{ github.sha }}
          Workflow: ${{ github.workflow }}
          "
          
          git commit -m "$commit_message"

      - name: Push documentation changes
        if: steps.check_doc_changes.outputs.doc_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}

      - name: Create summary
        if: always()
        run: |
          echo "## 📊 Dokümantasyon Senkronizasyon Özeti" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_changes.outputs.changes_detected }}" = "true" ]; then
            echo "✅ **Senkronizasyon Çalıştırıldı**" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.check_doc_changes.outputs.doc_changed }}" = "true" ]; then
              echo "📋 **Dokümantasyon Planı Güncellendi**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Güncellenenen dosya: \`docs-site/docs/meta/dokumantasyon-iyilestirme-plani-2025.html\`" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ **Dokümantasyon Planı Değişmedi**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Mevcut dokümantasyon planı zaten güncel." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "⏸️ **Senkronizasyon Atlandı**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "İzlenen dosyalarda değişiklik tespit edilmedi." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 İzlenen Dosyalar" >> $GITHUB_STEP_SUMMARY
          echo "- \`PROGRESS.md\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`SPRINT-PLANNING-2025.md\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`PROJECT-STATUS-REPORT-*.md\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`DEVELOPMENT-ROADMAP-2025.md\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`src/lib/storage/**\`" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Hedef Dosya" >> $GITHUB_STEP_SUMMARY
          echo "\`docs-site/docs/meta/dokumantasyon-iyilestirme-plani-2025.html\`" >> $GITHUB_STEP_SUMMARY

  notify-status:
    runs-on: ubuntu-latest
    needs: doc-sync
    if: always()
    
    steps:
      - name: Notify completion
        run: |
          if [ "${{ needs.doc-sync.result }}" = "success" ]; then
            echo "✅ Dokümantasyon senkronizasyonu başarıyla tamamlandı!"
          else
            echo "❌ Dokümantasyon senkronizasyonunda hata oluştu!"
            echo "Lütfen workflow loglarını kontrol edin."
          fi